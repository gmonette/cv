% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv-timeseries.R
\name{Arima}
\alias{Arima}
\alias{print.ARIMA}
\alias{plot.ARIMA}
\alias{testArima}
\alias{testArima.ARIMA}
\alias{update.ARIMA}
\alias{coef.ARIMA}
\alias{vcov.ARIMA}
\alias{logLik.ARIMA}
\alias{model.matrix.ARIMA}
\alias{fitted.ARIMA}
\alias{residuals.ARIMA}
\alias{predict.ARIMA}
\alias{cv.ARIMA}
\title{Cross-Validate Mixed-Effects Model}
\usage{
Arima(
  formula,
  data,
  subset = NULL,
  na.action = na.pass,
  order = c(1L, 0L, 0L),
  seasonal = list(order = c(0L, 0L, 0L), period = NA),
  ...
)

\method{print}{ARIMA}(x, ...)

\method{plot}{ARIMA}(
  x,
  y = c("fitted", "residuals", "portmantequ", "acf", "pacf"),
  test = c("Box-Pierce", "Ljung-Box"),
  max.lag = min(floor(10 * log10(n)), n - 1L),
  xlab = "time",
  main = "Diagnostic Plots",
  col = "blue",
  ...
)

testArima(model, ...)

\method{testArima}{ARIMA}(model, lag = 1, type = c("Box-Pierce", "Ljung-Box"), ...)

\method{update}{ARIMA}(object, ...)

\method{coef}{ARIMA}(object, ...)

\method{vcov}{ARIMA}(object, ...)

\method{logLik}{ARIMA}(object, ...)

\method{model.matrix}{ARIMA}(object, ...)

\method{fitted}{ARIMA}(object, ...)

\method{residuals}{ARIMA}(object, ...)

\method{predict}{ARIMA}(object, n.ahead, newdata = NULL, se.fit = FALSE, ...)

\method{cv}{ARIMA}(
  model,
  data = model$data,
  criterion = mse,
  k = "n",
  reps,
  seed,
  fold.type = c("cumulative", "preceding", "window"),
  begin.with = max(25, ceiling(n/10)),
  lead = 1L,
  criterion.name = deparse(substitute(criterion)),
  details = n <= 10000,
  ncores = 1L,
  ...
)
}
\arguments{
\item{formula}{either a one-sided formula giving the response variable
in an ARIMA model with no predictors, or a two-sided formula with the
response on the left and terms for the predictors on the right (as in
a typical R regression model); if the timeseries is differenced, the intercept
is removed from the model even if the formula implies an intercept.}

\item{data}{data frame with the data to which the model was fit;
can usually be inferred from the model; for \code{Arima()}, a data
frame with data to which the model is to be fit.}

\item{subset}{subsetting expression.}

\item{na.action}{function to process missing data; the default,
\code{\link{na.pass}}, will pass missing data to the \code{\link{arima}()}
function.}

\item{order}{the \eqn{p, d, q} specification of the ARIMA model;
see \code{\link{arima}()} for details; the default is \eqn{p = 1, d = 0, q = 0},
an AR(1) model.}

\item{seasonal}{specification of the seasonal part of the ARIMA model;
see \code{\link{arima}()} for details; the default is not to include
a seasonal part of the model.}

\item{...}{further arguments to be passed to \code{\link{arima}()}
or \code{Arima()}.}

\item{x}{an object of class \code{"ARIMA"}.}

\item{y}{which diagnostic plots to display; the default is
\code{c("residuals", "portmanteau", "acf", "pacf")}, where
\code{"portmanteau"} is the Box-Pierce or Ljung-Box test of
the autocorrelations of the residuals.}

\item{test}{one of \code{"Box-Pierce"} or \code{"Ljung-Box"},
with the former the default.}

\item{max.lag}{the maximum lag for the portmanteau tests; the
default is the same as the maximum lag for the residuals autocorrelations
and partial autocorrelations.}

\item{xlab}{label for horizontal ("time") axis; defaults to
\code{"Time"}.}

\item{main}{title for diagnostic plots.}

\item{col}{color for points and lines.}

\item{model}{an object of class \code{"ARIMA"}
produced by the \code{Arima()} function.}

\item{lag}{maximum lag to compute residual autocorrelation; if not
specified, the same default maximum lag as \code{\link[stats]{acf}}
is used.}

\item{type}{test of autocorrelations, either \code{"Box-Pierce"} (the default)
or \code{"Ljung-Box"} (see \code{\link[stats]{Box.test}()}).}

\item{object}{an object of class \code{"ARIMA"}.}

\item{n.ahead}{number of future cases to predict.}

\item{newdata}{data frame with rows containing the
predictors (if any) for predicted future cases.}

\item{se.fit}{if \code{TRUE} (the default is \code{FALSE}), compute
the standard errors of the predictions.}

\item{criterion}{function to compute the CV cost criterion
(default \code{\link{mse}}).}

\item{k}{number of folds, an integer \eqn{\gt 2}; the default is \code{"n"}, in which case
the first fold is determined by \code{begin.with} and subsequent folds
each contain a single case; that makes sense if \code{fold.type = "cumulative"}.}

\item{reps}{ignored (to match \code{\link{cv}()} generic function).}

\item{seed}{ignored (to match \code{\link{cv}()} generic function).}

\item{fold.type}{if \code{"cumulative"} (the default), predict
the response for 1 or more cases after the i-th fold from the model fit to data
in the \code{i}th and all preceding folds; if \code{"preceding"}, predict using cases in
the \code{i}th fold only; if \code{"window"}, folds comprise a moving window
of \code{begin.with} cases.}

\item{begin.with}{the number of cases in
the first fold. The remaining cases are divided among the subsequent
\code{k} - 1 folds.}

\item{lead}{how far ahead to predict (can be a vector of positive integers);
the default is \code{1}.}

\item{criterion.name}{name of the CV criterion; can usually be
inferred from \code{criterion}.}

\item{details}{return fold-wise parameter estimates for cases in each fold after the first;
the default is \code{TRUE} for \eqn{k \le 10,000}.}

\item{ncores}{if \code{ncores} \eqn{> 1}, the computation is parallelized.}
}
\value{
the \code{\link{cv.ARIMA}()} method returns an object of class
\code{c("cvOrdered", "cv")} (see  \code{\link{cvOrdered}()} and \code{\link{cv}()}).

\code{Arima()} returns an object of class \code{"ARIMA"} with the
following components: \code{formula}, the model formula; \code{data},
the data set to which the model was fit; \code{subset}, the subset
expression (if specified); \code{na.action}, see \code{\link{na.pass}};
\code{order}, the order of the ARIMA model;
\code{seasonal}, the seasonal specification;
\code{call}, the function call;
\code{dots}, any other arguments specified; \code{arima},
the object returned by the \code{\link{arima}()} function,
which \code{Arima()} calls;
\code{response}, the response variable; \code{model.matrix},
the model matrix, if there are predictors in the model.
}
\description{
\code{\link{cv}()} methods for time-series models
fit by \code{Arima()}, which provides a formula interface to the
\code{\link{arima}()}) function.
}
\section{Functions}{
\itemize{
\item \code{Arima()}: model-formula wrapper for the \code{\link{arima}()} function.

\item \code{print(ARIMA)}: \code{print()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{plot(ARIMA)}: \code{plot()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{testArima(ARIMA)}: test autocorrelations of ARIMA model residuals;
the test is performed by \code{\link[stats]{Box.test}()}.

\item \code{update(ARIMA)}: \code{update()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{coef(ARIMA)}: \code{coef()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{vcov(ARIMA)}: \code{vcov()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{logLik(ARIMA)}: \code{logLik()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{model.matrix(ARIMA)}: \code{model.matrix()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{fitted(ARIMA)}: \code{fitted()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{residuals(ARIMA)}: \code{residuals()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{predict(ARIMA)}: \code{predict()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

\item \code{cv(ARIMA)}: \code{cv()} method for \code{"ARIMA"} objects
created by the \code{\link{Arima}()} function.

}}
\examples{
if (require("stats", quietly=TRUE) &&
    require("datasets", quietly=TRUE)){
withAutoprint({
# model adapted from help("arima")
LH <- data.frame(lh = lh)
lh.arima <- Arima(~lh, data=LH)
lh.arima
plot(lh.arima)
testArima(lh.arima)
summary(cv.lh <- cv(lh.arima, lead=1:5))
plot(cv.lh)
summary(cv(lh.arima, lead=1:5, fold.type="window"))
# too few folds (5), just to illustrate fold.type="preceding":
summary(cv(lh.arima, k=5, fold.type="preceding"))

# model adapted from help("arima")
Lake <- data.frame(level=LakeHuron, year=time(LakeHuron))
lake.arima <- Arima(level ~ I(year - 1920), data=Lake,
                  order=c(2, 0, 0))
lake.arima
plot(lake.arima)
testArima(lake.arima)
summary(cv.lake <- cv(lake.arima, lead=1:5))
plot(cv.lake)
})
}
}
