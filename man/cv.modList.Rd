% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.modList.R
\name{cv.modList}
\alias{cv.modList}
\alias{models}
\alias{print.cvModList}
\alias{plot.cvModList}
\alias{as.data.frame.cvModList}
\title{Cross-Validate Several Models Fit to the Same Data}
\usage{
\method{cv}{modList}(
  model,
  data,
  criterion = mse,
  k,
  reps = 1L,
  seed,
  quietly = TRUE,
  recursive = FALSE,
  ...
)

models(...)

\method{print}{cvModList}(x, ...)

\method{plot}{cvModList}(
  x,
  y,
  spread = c("range", "sd"),
  confint = TRUE,
  xlab = "",
  ylab,
  main,
  axis.args = list(labels = names(x), las = 3L),
  col = palette()[2L],
  lwd = 2L,
  grid = TRUE,
  ...
)

\method{as.data.frame}{cvModList}(x, row.names = NULL, optional = TRUE, ...)
}
\arguments{
\item{model}{a list of regression model objects,
created by \code{models()}.}

\item{data}{(required) the data set to which the models were fit.}

\item{criterion}{the CV criterion ("cost" or lack-of-fit) function, defaults to
\code{\link{mse}}.}

\item{k}{the number of CV folds; may be omitted, in which case the value
will depend on the default for the \code{cv()} method invoked for the
individual models.}

\item{reps}{number of replications of CV for each model (default is 1).}

\item{seed}{(optional) seed for R's pseudo-random-number generator,
to be used to create the same set of CV folds for all of the models;
if omitted, a seed will be randomly generated and saved. Not used for
leave-one-out CV.}

\item{quietly}{if \code{TRUE} (the default), simple messages (for example about the
value to which the random-number generator seed is set), but not warnings or
errors, are suppressed.}

\item{recursive}{if \code{TRUE} (the default is \code{FALSE}), cross-validation
is performed recursively to select a "best" model deleting each fold in turn
by calculating the CV estimate of the criterion for the remaining folds;
this is equivalent to employing the \code{\link{selectModelList}()} model-selection
procedure.}

\item{...}{for \code{cv.modList()}, additional arguments to be passed to the \code{cv()} method
applied to each model.

For \code{models()}, two or more competing models fit to the
the same data; the several models may be named.

For the \code{print()} method, arguments to be passed to the \code{print()} method for
the individual model cross-validations.

For the \code{plot()} method, arguments to be passed to the base \code{\link[base]{plot}()}
function.}

\item{x}{an object of class \code{"cvModList"} to be printed or plotted.}

\item{y}{the name of the element in each \code{"cv"} object to be
plotted; defaults to \code{"adj CV crit"}, if it exists, or to
\code{"CV crit"}.}

\item{spread}{if \code{"range"}, the default, show the range of CV criteria
for each model along with their average; if \code{"sd"}, show the average
plus or minus 1 standard deviation.}

\item{confint}{if \code{TRUE} (the default) and if confidence intervals are
in any of the \code{"cv"} objects, then plot the confidence intervals around the
CV criteria.}

\item{xlab}{label for the x-axis (defaults to blank).}

\item{ylab}{label for the y-axis (if missing, a label is constructed).}

\item{main}{main title for the graph (if missing, a label is constructed).}

\item{axis.args}{a list of arguments for the \code{\link{axis}()}
function, used to draw the horizontal axis. In addition to
the axis arguments given explicitly, \code{side=1} (the horizontal
axis) and \code{at=seq(along=x)} (i.e., 1 to the number of models)
are used and can't be modified.}

\item{col}{color for the line and points, defaults to the second
element of the color palette; see \code{\link{palette}()}.}

\item{lwd}{line width for the line (defaults to 2).}

\item{grid}{if \code{TRUE} (the default), include grid lines on the graph.}

\item{row.names}{optional row names for the result,
defaults to \code{NULL}.}

\item{optional}{to match the \code{\link{as.data.frame}()} generic function;
if \code{FALSE} (the default is \code{TRUE}), then the names of the columns
of the returned data frame, including the names of coefficients,
are coerced to syntactically correct names.}
}
\value{
\code{models()} returns a \code{"modList"} object, the
\code{cv()} method for which returns a \code{"cvModList"} object,
or, when \code{recursive=TRUE}, an object of class \code{c("cvSelect", "cv")}.
}
\description{
A \code{\link{cv}()} method for an object of class  \code{"modlist"},
created by the \code{models()} function. This \code{cv()} method simplifies
the process of cross-validating several models on the same set of CV folds
and may also be used for recursive CV, where CV is used to select one from among
several models. \code{models()} performs some
"sanity" checks, warning if the models are of different classes, and
reporting an error if they are fit to apparently different data sets or
different response variables.
}
\section{Functions}{
\itemize{
\item \code{cv(modList)}: \code{cv()} method for \code{"modList"} objects.

\item \code{models()}: create a list of models.

\item \code{print(cvModList)}: \code{print()} method for \code{"cvModList"} objects.

\item \code{plot(cvModList)}: \code{plot()} method for \code{"cvModList"} objects.

\item \code{as.data.frame(cvModList)}: \code{as.data.frame()} method for
\code{"cvModList"} objects.

}}
\examples{
data("Duncan", package="carData")
m1 <- lm(prestige ~ income + education, data=Duncan)
m2 <- lm(prestige ~ income + education + type, data=Duncan)
m3 <- lm(prestige ~ (income + education)*type, data=Duncan)
(cv.models <- cv(models(m1=m1, m2=m2, m3=m3),
                 data=Duncan, seed=7949, reps=5))
D.cv.models <- as.data.frame(cv.models)
head(D.cv.models)
summary(D.cv.models, criterion ~ model + rep, include="folds")
plot(cv.models)
(cv.models.ci <- cv(models(m1=m1, m2=m2, m3=m3),
                    data=Duncan, seed=5962, confint=TRUE, level=0.50))
                 # nb: n too small for accurate CIs
plot(cv.models.ci)
(cv.models.recursive <- cv(models(m1=m1, m2=m2, m3=m3),
                           data=Duncan, seed=5962,
                           recursive=TRUE, save.model=TRUE))
cv.models.recursive$selected.model
}
\seealso{
\code{\link{cv}}, \code{\link{cv.merMod}},
\code{\link{selectModelList}}.
}
