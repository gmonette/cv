# Generated by roxygen2: do not edit by hand

S3method("[",cvModList)
S3method(GetResponse,default)
S3method(GetResponse,glmmTMB)
S3method(GetResponse,lme)
S3method(GetResponse,merMod)
S3method(GetResponse,modList)
S3method(base::as.data.frame,cv)
S3method(base::as.data.frame,cvList)
S3method(base::as.data.frame,cvModList)
S3method(base::print,cv)
S3method(base::print,cvDataFrame)
S3method(base::print,cvList)
S3method(base::summary,cvDataFrame)
S3method(coef,cvSelect)
S3method(compareFolds,default)
S3method(cv,"function")
S3method(cv,default)
S3method(cv,glm)
S3method(cv,glmmTMB)
S3method(cv,lm)
S3method(cv,lme)
S3method(cv,merMod)
S3method(cv,modList)
S3method(cv,rlm)
S3method(fold,folds)
S3method(plot,cvModList)
S3method(print,cvModList)
S3method(print,folds)
export(BayesRule)
export(BayesRule2)
export(GetResponse)
export(compareFolds)
export(cv)
export(cvCompute)
export(cvMixed)
export(cvSelect)
export(fold)
export(folds)
export(medAbsErr)
export(models)
export(mse)
export(rmse)
export(selectModelList)
export(selectStepAIC)
export(selectTrans)
export(selectTransStepAIC)
importFrom(MASS,rlm)
importFrom(MASS,stepAIC)
importFrom(doParallel,registerDoParallel)
importFrom(foreach,"%dopar%")
importFrom(foreach,foreach)
importFrom(grDevices,palette)
importFrom(graphics,abline)
importFrom(graphics,arrows)
importFrom(graphics,axis)
importFrom(graphics,box)
importFrom(graphics,par)
importFrom(graphics,points)
importFrom(graphics,strwidth)
importFrom(lme4,lmer)
importFrom(methods,functionBody)
importFrom(nlme,lme)
importFrom(parallel,makeCluster)
importFrom(parallel,stopCluster)
importFrom(stats,coef)
importFrom(stats,family)
importFrom(stats,fitted)
importFrom(stats,getCall)
importFrom(stats,hatvalues)
importFrom(stats,lm.wfit)
importFrom(stats,lsfit)
importFrom(stats,median)
importFrom(stats,model.frame)
importFrom(stats,model.matrix)
importFrom(stats,model.response)
importFrom(stats,na.omit)
importFrom(stats,na.pass)
importFrom(stats,predict)
importFrom(stats,printCoefmat)
importFrom(stats,qnorm)
importFrom(stats,residuals)
importFrom(stats,sd)
importFrom(stats,update)
importFrom(stats,weighted.mean)
importFrom(stats,weights)
importFrom(utils,capture.output)
